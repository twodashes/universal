{"version":3,"sources":["req.js"],"names":["aggregate_req_body_query","req","query","body","key","val","decodeURIComponent","trim","includes","JSON","parse","e","window","browser","func","__"],"mappings":";AAmEC,aAAA,SAAA,EAAA,GAAA,OAAA,EAAA,mBAAA,QAAA,iBAAA,OAAA,SAAA,SAAA,GAAA,cAAA,GAAA,SAAA,GAAA,OAAA,GAAA,mBAAA,QAAA,EAAA,cAAA,QAAA,IAAA,OAAA,UAAA,gBAAA,IAAA,GAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,8BAAA,EA1DD,IAAMA,EAA2B,SAAUC,GACrCC,IAAAA,EAAQ,GAMRD,GAJAA,EAAIE,OACND,EAAQD,EAAIE,MAGVF,EAAIC,MACD,IAAA,IAAIE,KAAOH,EAAIC,MAAO,CACrBG,IAAAA,EAAMJ,EAAIC,MAAME,GAChBC,GAAQ,IAARA,GAIA,GAACA,IACLA,EAAMC,mBAAmBD,GAAKE,QAE1BF,GAAQ,cAARA,EAIAA,GAAQ,SAARA,EAIAA,GAAQ,SAARA,EAIAA,GAAQ,UAARA,EAAAA,CAIA,GAAA,CAAC,IAAK,IAAK,KAAKG,SAASH,EAAI,IAC3B,IACFA,EAAMI,KAAKC,MAAML,GACjB,MAAOM,GACPN,EAAM,GAGVH,EAAME,GAAOC,OAVXH,EAAME,IAAO,OAJbF,EAAME,IAAO,OAJbF,EAAME,GAAO,YAJbF,EAAME,GAAO,iBAPbF,EAAME,GAAO,EAiCZF,OAAAA,GAMT,GAQC,QAAA,yBAAA,EARqB,YAAXU,oBAAAA,OAAAA,YAAAA,EAAAA,SAAqB,CACxBC,IAAAA,EAAU,CAAEb,yBAAAA,GAIb,IAAA,IAAIc,KAFTF,OAAOG,GAAKH,OAAOG,IAAM,GAERF,EACfD,OAAOG,GAAGD,GAAQD,EAAQC","file":"req.map","sourceRoot":"../esm","sourcesContent":["/**\n * Parse and combine POST data and URL params into JavaScript object\n * @param req {object} - IMPORTANT: does not have to be real api request. Can be simple object.\n * @param req.body {object} - key/value pairs, already parsed and ready to use\n * @param req.query {object} - object of key/value pairs from URL query string\n *    This function will decodeURIComponent then parse each value.\n *    These req.query values will override values from req.body!\n * @returns {{}} - combined keys/values. Original request object will NOT be modified.\n */\nconst aggregate_req_body_query = function (req) {\n  let query = {};\n  // body (POST data)\n  if (req.body) {\n    query = req.body;\n  }\n  // query (URL parameters)\n  if (req.query) {\n    for (let key in req.query) {\n      let val = req.query[key];\n      if (val === 0) {\n        query[key] = 0;\n        continue;\n      }\n      if (!val) continue;\n      val = decodeURIComponent(val).trim();\n      if (!val) continue;\n      if (val === \"undefined\") {\n        query[key] = \"undefined\";\n        continue;\n      }\n      if (val === \"null\") {\n        query[key] = \"null\";\n        continue;\n      }\n      if (val === \"true\") {\n        query[key] = true;\n        continue;\n      }\n      if (val === \"false\") {\n        query[key] = false;\n        continue;\n      }\n      if (['\"', \"{\", \"[\"].includes(val[0])) {\n        try {\n          val = JSON.parse(val);\n        } catch (e) {\n          val = \"\";\n        }\n      }\n      query[key] = val;\n    }\n  }\n  // combined\n  return query;\n};\n\n/*\n * EXPORT FOR BROWSER\n */\nif (typeof window === \"object\") {\n  const browser = { aggregate_req_body_query };\n  // set up for export\n  window.__ = window.__ || {};\n  // flatten\n  for (let func in browser) {\n    window.__[func] = browser[func];\n  }\n}\n\nexport { aggregate_req_body_query };\n"]}